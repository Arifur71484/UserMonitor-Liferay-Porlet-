/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.laitspa.usermonitor.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the user_monitor service. Represents a row in the &quot;user_monitor&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link it.laitspa.usermonitor.model.impl.user_monitorModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link it.laitspa.usermonitor.model.impl.user_monitorImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see user_monitor
 * @see it.laitspa.usermonitor.model.impl.user_monitorImpl
 * @see it.laitspa.usermonitor.model.impl.user_monitorModelImpl
 * @generated
 */
public interface user_monitorModel extends BaseModel<user_monitor> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a user_monitor model instance should use the {@link user_monitor} interface instead.
	 */

	/**
	 * Returns the primary key of this user_monitor.
	 *
	 * @return the primary key of this user_monitor
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this user_monitor.
	 *
	 * @param primaryKey the primary key of this user_monitor
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the record ID of this user_monitor.
	 *
	 * @return the record ID of this user_monitor
	 */
	public long getRecordId();

	/**
	 * Sets the record ID of this user_monitor.
	 *
	 * @param recordId the record ID of this user_monitor
	 */
	public void setRecordId(long recordId);

	/**
	 * Returns the user name of this user_monitor.
	 *
	 * @return the user name of this user_monitor
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this user_monitor.
	 *
	 * @param userName the user name of this user_monitor
	 */
	public void setUserName(String userName);

	/**
	 * Returns the user surname of this user_monitor.
	 *
	 * @return the user surname of this user_monitor
	 */
	@AutoEscape
	public String getUserSurname();

	/**
	 * Sets the user surname of this user_monitor.
	 *
	 * @param userSurname the user surname of this user_monitor
	 */
	public void setUserSurname(String userSurname);

	/**
	 * Returns the user real name of this user_monitor.
	 *
	 * @return the user real name of this user_monitor
	 */
	@AutoEscape
	public String getUserRealName();

	/**
	 * Sets the user real name of this user_monitor.
	 *
	 * @param userRealName the user real name of this user_monitor
	 */
	public void setUserRealName(String userRealName);

	/**
	 * Returns the email address of this user_monitor.
	 *
	 * @return the email address of this user_monitor
	 */
	@AutoEscape
	public String getEmailAddress();

	/**
	 * Sets the email address of this user_monitor.
	 *
	 * @param emailAddress the email address of this user_monitor
	 */
	public void setEmailAddress(String emailAddress);

	/**
	 * Returns the remote ip of this user_monitor.
	 *
	 * @return the remote ip of this user_monitor
	 */
	@AutoEscape
	public String getRemoteIp();

	/**
	 * Sets the remote ip of this user_monitor.
	 *
	 * @param remoteIp the remote ip of this user_monitor
	 */
	public void setRemoteIp(String remoteIp);

	/**
	 * Returns the data login of this user_monitor.
	 *
	 * @return the data login of this user_monitor
	 */
	@AutoEscape
	public String getDataLogin();

	/**
	 * Sets the data login of this user_monitor.
	 *
	 * @param dataLogin the data login of this user_monitor
	 */
	public void setDataLogin(String dataLogin);

	/**
	 * Returns the type access of this user_monitor.
	 *
	 * @return the type access of this user_monitor
	 */
	@AutoEscape
	public String getTypeAccess();

	/**
	 * Sets the type access of this user_monitor.
	 *
	 * @param typeAccess the type access of this user_monitor
	 */
	public void setTypeAccess(String typeAccess);

	/**
	 * Returns the user monitor ID of this user_monitor.
	 *
	 * @return the user monitor ID of this user_monitor
	 */
	public long getUserMonitorId();

	/**
	 * Sets the user monitor ID of this user_monitor.
	 *
	 * @param UserMonitorId the user monitor ID of this user_monitor
	 */
	public void setUserMonitorId(long UserMonitorId);

	/**
	 * Returns the d a t e of this user_monitor.
	 *
	 * @return the d a t e of this user_monitor
	 */
	public Date getDATE();

	/**
	 * Sets the d a t e of this user_monitor.
	 *
	 * @param DATE the d a t e of this user_monitor
	 */
	public void setDATE(Date DATE);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(it.laitspa.usermonitor.model.user_monitor user_monitor);

	@Override
	public int hashCode();

	@Override
	public CacheModel<it.laitspa.usermonitor.model.user_monitor> toCacheModel();

	@Override
	public it.laitspa.usermonitor.model.user_monitor toEscapedModel();

	@Override
	public it.laitspa.usermonitor.model.user_monitor toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}